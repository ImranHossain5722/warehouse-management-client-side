[
  {
    
    "title": "Difference between javascript and Nodejs",

    "blog": "Javascript is a lightweight, object-oriented scripting language that is used to build dynamic HTML pages with interactive effects on a webpage. JavaScript is also commonly used in game development and mobile app development. It is an interpreted scripting language, and the code can only be executed and run in a web browser. We can use Node.js to execute and run the code outside of the browser. It's also known as a browser's language, and it can be used for both client-side and server-side development. Brendan Eich of Netscape created it, and it was first published in 1995. The language was originally known as LiveScript before being renamed JavaScript. JavaScript's syntax is heavily influenced by the programming language C. The extension of JavaScript filename is .js.\n\nAdvantages of JavaScript. \n\nIt is an open-source, flexible, fast, light-weighted framework.\n\nIt allows cross-compilation.\n\nIt supports interfaces, modules, and classes.\n\nIt is used for both frontend and backend development so that it may run on different devices.\n\nIt allows us to build interfaces that react whenever the user hovers the mouse over them.\n\nIt is friendly with other languages; therefore, many other applications may use JavaScript.\n we may extend the JavaScript for writing large applications.\n\n Node.js is a cross-platform, open-source JavaScript runtime environment that enables JavaScript to be run on the server. Node.js enables JavaScript code to run outside of the browser. Node.js comes with a large number of modules and is mostly used in web creation. It may run on various platforms including, Windows, Linux, Mac OS, etc. It provides a cross-platform runtime environment with event-driven, non-blocking (asynchronous) I/O for creating highly scalable server-side JavaScript applications./\n\nAdvantages and Disadvantages of Node.js\n\nIt's a cross-platform framework that works on Windows, MAC, and Linux.\n\nIt is used the JavaScript language to develop server-side applications\n\n js applications never buffered any type of data in applications. Node.js applications simply output data in chunks.\n\njs is a quick programming execution library built on the V8 JavaScript Engine in Google Chrome.",

    "admin": "Imran Hossain",
    "img": "https://res.cloudinary.com/dk0lorahh/image/upload/v1651860856/javascript-vs-nodejs_i0npjh.png"
  },

  {
   
    "title": " What is the purpose of jwt and how does it work?",
    "blog": "JWT is a JSON Web Token is an open standard (RFC 7519) for securely transmitting information between parties as JSON object.\n\nIt is compact, readable and digitally signed using a private key/ or a public key pair by the Identity Provider(IdP). So the integrity and authenticity of the token can be verified by other parties involved.\n\nThe purpose of using JWT is not to hide data but to ensure the authenticity of the data. JWT is signed and encoded, not encrypted.\n\n\nHow does JWT Authentication work? When to use JWT Authentication?\n\nWhen it comes to API authentication and server-to-server authorization, JSON web token (JWT) is particularly a useful technology. In terms of Single Sign-On (SSO), it means that a service provider can receive trustworthy information from the authentication server.\n\nBy sharing a secret key with the Identity Provider, the Service Provider can hash a part of a token it receives and compare it to the signature of the token. Now, if that result matches the signature, the SP knows that the information provided has come from the other entity possessing the key.\n\n 1.User sign-in using username and password.\n\n2.The authentication server verifies the credentials and issues a JWT signed using a private key.\n\n3.Moving forward, the client will use the JWT to access protected resources by passing the JWT in the HTTP Authorization header\n\n4.The resource server then verifies the authenticity of the token using the public key.\n\n The Identity Provider generates a JWT certifying user identity, and the resource server decodes and verifies the authenticity of the token using the public key.\n\nSince the tokens are used for authorization and authentication in future requests and API calls great care must be taken to prevent security issues. These tokens shouldn’t be stored in publicly accessible areas like the browser’s local storage or cookies. In case there are no other choices, then the payload should be encrypted.",
    "admin": "Imran Hossain",
    "img": "https://res.cloudinary.com/dk0lorahh/image/upload/v1651861479/jwtpng_z3hxwq.png"
  },

  {   
    "title": " Differences between SQL and NoSQL",
    "blog": "Structured Query language (SQL) pronounced as “S-Q-L” or sometimes as “See-Quel” is the standard language for dealing with Relational Databases. A relational database defines relationships in the form of tables.\n\nSQL programming can be effectively used to insert, search, update, delete database records.\n\nThat doesn’t mean SQL cannot do things beyond that. It can do a lot of things including, but not limited to, optimizing and maintenance of databases.Relational databases like MySQL Database, Oracle, Ms SQL Server, Sybase, etc. use SQL.\n\nSQL Databases\n\nTables with fixed rows and columns.\n\nDeveloped in the 1970s with a focus on reducing data duplication.\n\nOracle, MySQL, Microsoft SQL Server, and PostgreSQL\n\n\nNoSQL is a non-relational DMS, that does not require a fixed schema, avoids joins, and is easy to scale. NoSQL database is used for distributed data stores with humongous data storage needs. NoSQL is used for Big data and real-time web apps. For example companies like Twitter, Facebook, Google that collect terabytes of user data every single day.\n\nNoSQL database stands for “Not Only SQL” or “Not SQL.” Though a better term would NoREL NoSQL caught on. Carl Strozz introduced the NoSQL concept in 1998.\n\nTraditional RDBMS uses SQL syntax to store and retrieve data for further insights. Instead, a NoSQL database system encompasses a wide range of database technologies that can store structured, semi-structured, unstructured and polymorphic data.\n\nNoSQL databases are primarily called as Non-relational or distributed database\n\nNoSQL database system consists of various kind of database technologies. These databases were developed in response to the demands presented for the development of the modern application.\n\nNo declarative query language\n\nNoSQL databases can be document based, key-value pairs, graph databases\n\nNoSQL databases use dynamic schema for unstructured data.\n\nNoSQL databases are horizontally scalable",
    "admin": "Imran Hossain",
    "img": "https://res.cloudinary.com/dk0lorahh/image/upload/v1651864057/SQL-Vs-NoSQL1_u1buj3.png"
  }


]
